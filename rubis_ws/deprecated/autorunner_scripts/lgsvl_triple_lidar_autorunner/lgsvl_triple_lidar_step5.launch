<launch>
  <!-- setting of this launch file -->
  <arg name="car_detection" default="true" />
  <arg name="pedestrian_detection" default="false" />
  <arg name="use_gpu" default="false" />
  <arg name="is_register_lidar2camera_tf" default="true" />
  <arg name="is_publish_projection_matrix" default="true" />
  <arg name="is_publish_camera_info" default="true" />
  <arg name="left_calib" default="$(env HOME)/autoware.ai/autoware_files/lgsvl/data/calibration/double_lidar/left_calibration.yaml"/>
  <arg name="right_calib" default="$(env HOME)/autoware.ai/autoware_files/lgsvl/data/calibration/double_lidar/right_calibration.yaml"/>

  <!-- calibration_publisher LEFT -->
  <node pkg="calibration_publisher" type="calibration_publisher" name="calibration_publisher_left" ns="/" output="screen">
    <param name="register_lidar2camera_tf" type="bool" value="true"/>
    <param name="publish_extrinsic_mat" type="bool" value="true"/>
    <param name="publish_camera_info" type="bool" value="true"/>
    <param name="calibration_file" type="str" value="$(arg left_calib)"/>
    <param name="target_frame" type="str" value="/velodyne"/>
    <param name="camera_frame" type="str" value="/camera"/>
    <param name="image_topic_src" type="str" value="/image_raw"/>
    <param name="camera_info_topic" type="str" value="/camera_info_left"/>
    <param name="projection_matrix_topic" type="str" value="/projection_matrix_left"/>
  </node>

  <!-- lidar_euclidean_cluster_detect LEFT-->
  <include file="$(find lidar_euclidean_cluster_detect)/launch/lidar_euclidean_cluster_detect.launch">
    <arg name="points_node" value="/points_no_ground_left" /><!--CHANGE THIS TO READ WHETHER FROM VSCAN OR POINTS_RAW -->
    <arg name="label" value="left" /><!-- Label of the topics -->
    <arg name="output_frame" value="velodyne_left" />
    <arg name="remove_ground" value="true" />
    <arg name="downsample_cloud" value="false" /> <!-- Apply VoxelGrid Filter with the value given by "leaf_size"-->
    <arg name="leaf_size" value="0.7" /><!-- Voxel Grid Filter leaf size-->
    <arg name="cluster_size_min" value="1" /><!-- Minimum number of points to consider a cluster as valid-->
    <arg name="cluster_size_max" value="100000" /><!-- Maximum number of points to allow inside a cluster-->
    <arg name="sync" value="false" />
    <arg name="use_diffnormals" value="false" />
    <arg name="pose_estimation" value="false" />
    <arg name="clip_min_height" value="-3.0" />
    <arg name="clip_max_height" value="4" />
    <arg name="keep_lanes" value="false" />
    <arg name="keep_lane_left_distance" value="5" />
    <arg name="keep_lane_right_distance" value="5" />
    <arg name="cluster_merge_threshold" value="1.5" />
    <arg name="clustering_distance" value="0.01" />
    <arg name="use_vector_map" value="false" />
    <arg name="wayarea_gridmap_layer" value="wayarea" />
    <arg name="remove_points_upto" value="0.0" />
    <arg name="use_gpu" value="$(arg use_gpu)" />
    <arg name="use_multiple_thres" value="false"/>
    <arg name="clustering_ranges" value="[15,30,45,60]"/><!-- Distances to segment pointcloud -->
    <arg name="clustering_distances"
         value="[0.5,1.1,1.6,2.1,2.6]"/><!-- Euclidean Clustering threshold distance for each segment -->
  </include>

  <!-- imm_ukf_pda_track LEFT-->
  <include file="$(find imm_ukf_pda_track)/launch/imm_ukf_pda_track.launch">
    <arg name="label" value="left" />
    <arg name="namespace" value="/detection/object_tracker"/>
    <arg name="tracker_input_topic" value="/detection/lidar_detector/objects_left" />
    <arg name="tracker_output_topic" value="/detection/object_tracker/objects_left" />
    <arg name="tracking_frame" value="/world" />
    <arg name="gating_threshold" value="9.22" />
    <arg name="gate_probability" value="0.99" />
    <arg name="detection_probability" value="0.9" />
    <arg name="life_time_threshold" value="8" />
    <arg name="static_velocity_threshold" value="0.5" />
    <arg name="static_num_history_threshold" value="3" />
    <arg name="prevent_explosion_threshold" value="1000" />
    <arg name="merge_distance_threshold" value="0.5"/>
    <arg name="use_sukf" value="false" />
    <arg name="use_map_info" value="false" />
    <arg name="lane_direction_chi_threshold" value="2.71" />
    <arg name="nearest_lane_distance_threshold" value="1.0" />
    <arg name="vectormap_frame" value="/map" />
  </include>

  <!-- range fusion LEFT-->
  <include file="$(find range_vision_fusion)/launch/range_vision_fusion.launch">
    <arg name="label" default="left" />
    <arg name="detected_objects_range" default="/detection/object_tracker/objects_left"/>
    <arg name="detected_objects_vision" default="/detection/image_detector/objects"/>
    <arg name="camera_info_src" default="/camera_info_left"/>
    <arg name="min_car_dimensions" default="[3,2,2]"/>
    <arg name="min_person_dimensions" default="[1,2,1]"/>
    <arg name="min_truck_dimensions" default="[4,2,2]"/>
    <arg name="sync_topics" default="true"/>
    <arg name="overlap_threshold" default="0.000001"/>
    <arg name="vision_area_ratio_threshold" default="0.000001"/>
    <arg name="use_vector_map" default="false"/>
    <arg name="namespace" default="/detection/fusion_tools"/>
  </include>

  <!-- calibration_publisher RIGHT -->
  <node pkg="calibration_publisher" type="calibration_publisher" name="calibration_publisher_right" ns="/" output="screen">
    <param name="register_lidar2camera_tf" type="bool" value="true"/>
    <param name="publish_extrinsic_mat" type="bool" value="true"/>
    <param name="publish_camera_info" type="bool" value="true"/>
    <param name="calibration_file" type="str" value="$(arg right_calib)"/>
    <param name="target_frame" type="str" value="/velodyne"/>
    <param name="camera_frame" type="str" value="/camera"/>
    <param name="image_topic_src" type="str" value="/image_raw"/>
    <param name="camera_info_topic" type="str" value="/camera_info_right"/>
    <param name="projection_matrix_topic" type="str" value="/projection_matrix_right"/>
  </node>

  <!-- lidar_euclidean_cluster_detect RIGHT-->
  <include file="$(find lidar_euclidean_cluster_detect)/launch/lidar_euclidean_cluster_detect.launch">
    <arg name="points_node" value="/points_no_ground_right" /><!--CHANGE THIS TO READ WHETHER FROM VSCAN OR POINTS_RAW -->
    <arg name="label" value="right" /><!-- Label of the topics -->
    <arg name="output_frame" value="velodyne_right" />
    <arg name="remove_ground" value="true" />
    <arg name="downsample_cloud" value="false" /> <!-- Apply VoxelGrid Filter with the value given by "leaf_size"-->
    <arg name="leaf_size" value="0.7" /><!-- Voxel Grid Filter leaf size-->
    <arg name="cluster_size_min" value="1" /><!-- Minimum number of points to consider a cluster as valid-->
    <arg name="cluster_size_max" value="100000" /><!-- Maximum number of points to allow inside a cluster-->
    <arg name="sync" value="false" />
    <arg name="use_diffnormals" value="false" />
    <arg name="pose_estimation" value="false" />
    <arg name="clip_min_height" value="-3.0" />
    <arg name="clip_max_height" value="4" />
    <arg name="keep_lanes" value="false" />
    <arg name="keep_lane_left_distance" value="5" />
    <arg name="keep_lane_right_distance" value="5" />
    <arg name="cluster_merge_threshold" value="1.5" />
    <arg name="clustering_distance" value="0.01" />
    <arg name="use_vector_map" value="false" />
    <arg name="wayarea_gridmap_layer" value="wayarea" />
    <arg name="remove_points_upto" value="0.0" />
    <arg name="use_gpu" value="$(arg use_gpu)" />
    <arg name="use_multiple_thres" value="false"/>
    <arg name="clustering_ranges" value="[15,30,45,60]"/><!-- Distances to segment pointcloud -->
    <arg name="clustering_distances"
         value="[0.5,1.1,1.6,2.1,2.6]"/><!-- Euclidean Clustering threshold distance for each segment -->
  </include>

  <!-- imm_ukf_pda_track RIGHT-->
  <include file="$(find imm_ukf_pda_track)/launch/imm_ukf_pda_track.launch">
    <arg name="label" value="right" />
    <arg name="namespace" value="/detection/object_tracker"/>
    <arg name="tracker_input_topic" value="/detection/lidar_detector/objects_right" />
    <arg name="tracker_output_topic" value="/detection/object_tracker/objects_right" />
    <arg name="tracking_frame" value="/world" />
    <arg name="gating_threshold" value="9.22" />
    <arg name="gate_probability" value="0.99" />
    <arg name="detection_probability" value="0.9" />
    <arg name="life_time_threshold" value="8" />
    <arg name="static_velocity_threshold" value="0.5" />
    <arg name="static_num_history_threshold" value="3" />
    <arg name="prevent_explosion_threshold" value="1000" />
    <arg name="merge_distance_threshold" value="0.5"/>
    <arg name="use_sukf" value="false" />
    <arg name="use_map_info" value="false" />
    <arg name="lane_direction_chi_threshold" value="2.71" />
    <arg name="nearest_lane_distance_threshold" value="1.0" />
    <arg name="vectormap_frame" value="/map" />
  </include>

  <!-- range fusion RIGHT-->
  <include file="$(find range_vision_fusion)/launch/range_vision_fusion.launch">
    <arg name="label" default="right" />
    <arg name="detected_objects_range" default="/detection/object_tracker/objects_right"/>
    <arg name="detected_objects_vision" default="/detection/image_detector/objects"/>
    <arg name="camera_info_src" default="/camera_info_right"/>
    <arg name="min_car_dimensions" default="[3,2,2]"/>
    <arg name="min_person_dimensions" default="[1,2,1]"/>
    <arg name="min_truck_dimensions" default="[4,2,2]"/>
    <arg name="sync_topics" default="true"/>
    <arg name="overlap_threshold" default="0.2"/>
    <arg name="vision_area_ratio_threshold" default="0.0025"/>
    <arg name="use_vector_map" default="false"/>
    <arg name="namespace" default="/detection/fusion_tools"/>
  </include>

  <!-- lidar_euclidean_cluster_detect BACK-->
  <include file="$(find lidar_euclidean_cluster_detect)/launch/lidar_euclidean_cluster_detect.launch">
    <arg name="points_node" value="/points_no_ground_back" /><!--CHANGE THIS TO READ WHETHER FROM VSCAN OR POINTS_RAW -->
    <arg name="label" value="back" /><!-- Label of the topics -->
    <arg name="output_frame" value="velodyne_back" />
    <arg name="remove_ground" value="true" />
    <arg name="downsample_cloud" value="false" /> <!-- Apply VoxelGrid Filter with the value given by "leaf_size"-->
    <arg name="leaf_size" value="0.7" /><!-- Voxel Grid Filter leaf size-->
    <arg name="cluster_size_min" value="1" /><!-- Minimum number of points to consider a cluster as valid-->
    <arg name="cluster_size_max" value="100000" /><!-- Maximum number of points to allow inside a cluster-->
    <arg name="sync" value="false" />
    <arg name="use_diffnormals" value="false" />
    <arg name="pose_estimation" value="false" />
    <arg name="clip_min_height" value="-3.0" />
    <arg name="clip_max_height" value="4" />
    <arg name="keep_lanes" value="false" />
    <arg name="keep_lane_left_distance" value="5" />
    <arg name="keep_lane_right_distance" value="5" />
    <arg name="cluster_merge_threshold" value="1.5" />
    <arg name="clustering_distance" value="0.01" />
    <arg name="use_vector_map" value="false" />
    <arg name="wayarea_gridmap_layer" value="wayarea" />
    <arg name="remove_points_upto" value="0.0" />
    <arg name="use_gpu" value="$(arg use_gpu)" />
    <arg name="use_multiple_thres" value="false"/>
    <arg name="clustering_ranges" value="[15,30,45,60]"/><!-- Distances to segment pointcloud -->
    <arg name="clustering_distances"
         value="[0.5,1.1,1.6,2.1,2.6]"/><!-- Euclidean Clustering threshold distance for each segment -->
  </include>

  <!-- imm_ukf_pda_track BACK-->
  <include file="$(find imm_ukf_pda_track)/launch/imm_ukf_pda_track.launch">
    <arg name="label" value="back" />
    <arg name="namespace" value="/detection/object_tracker"/>
    <arg name="tracker_input_topic" value="/detection/lidar_detector/objects_back" />
    <arg name="tracker_output_topic" value="/detection/object_tracker/objects_back" />
    <arg name="tracking_frame" value="/world" />
    <arg name="gating_threshold" value="9.22" />
    <arg name="gate_probability" value="0.99" />
    <arg name="detection_probability" value="0.9" />
    <arg name="life_time_threshold" value="8" />
    <arg name="static_velocity_threshold" value="0.5" />
    <arg name="static_num_history_threshold" value="3" />
    <arg name="prevent_explosion_threshold" value="1000" />
    <arg name="merge_distance_threshold" value="0.5"/>
    <arg name="use_sukf" value="false" />
    <arg name="use_map_info" value="false" />
    <arg name="lane_direction_chi_threshold" value="2.71" />
    <arg name="nearest_lane_distance_threshold" value="1.0" />
    <arg name="vectormap_frame" value="/map" />
  </include>
</launch>