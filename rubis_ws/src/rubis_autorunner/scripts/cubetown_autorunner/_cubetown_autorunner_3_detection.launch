<launch>
  <include file="$(find points_preprocessor)/launch/ray_ground_filter_params.launch">
    <arg name="input_point_topic" value="/points_raw" />  <!-- input_point_topic, ground filtering
    will be performed over the pointcloud in this topic. -->
    <arg name="base_frame" value="base_link" />  <!-- Coordinate system to perform transform (default
    base_link) -->
    <arg name="max_clipping_height" value="5" />  <!-- Remove Points above this height value (default
    2.0 meters) -->
    <arg name="min_clipping_height" value="-0.5" />  <!-- Remove Points below this height value
    (default -0.5 meters) -->
    <arg name="min_point_distance" value="3.5" />  <!-- Removes Points closer than this distance from
    the sensor origin (default 1.85 meters) -->
    <arg name="radial_divider_angle" value="0.08" />  <!-- Angle of each Radial division on the XY
    Plane (default 0.08 degrees)-->
    <arg name="concentric_divider_distance" value="0.0" />  <!-- Distance of each concentric division
    on the XY Plane (default 0.0 meters) -->
    <arg name="local_max_slope" value="8" />  <!-- Max Slope of the ground between Points (default 8
    degrees) -->
    <arg name="general_max_slope" value="1" />  <!-- Max Slope of the ground in the entire PointCloud,
    used when reclassification occurs (default 5 degrees)-->
    <arg name="min_height_threshold" value="0.05" />  <!-- Minimum height threshold between points
    (default 0.05 meters)-->
    <arg name="reclass_distance_threshold" value="0.02" />  <!-- Distance between points at which re
    classification will occur (default 0.2 meters)-->
    <arg name="no_ground_point_topic" value="/points_no_ground" />
    <arg name="ground_point_topic" value="/points_ground" />
  </include>

  <!-- lidar_euclidean_cluster_detect-->
  <include
    file="$(find lidar_euclidean_cluster_detect)/launch/lidar_euclidean_cluster_detect.launch">
    <arg name="points_node" value="/points_no_ground_center" />
    <arg name="remove_ground" value="true" />
    <arg name="downsample_cloud" value="false" />
    <arg name="leaf_size" value="0.68" />
    <arg name="cluster_size_min" value="1" />
    <arg name="cluster_size_max" value="100000" />
    <arg name="sync" value="false" />
    <arg name="use_diffnormals" value="false" />
    <arg name="pose_estimation" value="false" />
    <arg name="clip_min_height" value="-10.0" />
    <arg name="clip_max_height" value="10" />
    <arg name="keep_lanes" value="false" />
    <arg name="keep_lane_left_distance" value="5" />
    <arg name="keep_lane_right_distance" value="5" />
    <arg name="cluster_merge_threshold" value="1.5" />
    <arg name="clustering_distance" value="0.75" />
    <arg name="use_vector_map" value="false" />
    <arg name="wayarea_gridmap_layer" value="wayarea" />
    <arg name="output_frame" value="velodyne" />
    <arg name="remove_points_upto" value="0.0" />
    <arg name="use_gpu" value="false" />
    <arg name="use_multiple_thres" value="false" />
    <arg name="clustering_ranges" value="[15,30,45,60]" />
    <arg name="clustering_distances"
      value="[0.5,1.1,1.6,2.1,2.6]" />
  </include>

  <include file="$(find vision_workloads)/launch/lane_detector.launch">
    <arg name="debug" value="true" />
    <arg name="node_name" value="lane_detector_top" />
    <arg name="input_topic" value="/image_raw1" />
    <arg name="filter_image" value="false" />
    <arg name="gray_scale" value="true" />
    <arg name="gaussian_blur" value="false" />
    <arg name="canny" value="true" />
    <arg name="roi" value="true" />
  </include>

</launch>