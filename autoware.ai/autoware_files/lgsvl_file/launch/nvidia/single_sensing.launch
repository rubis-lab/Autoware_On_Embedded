<launch>
  <!-- ROS-Bridge node for simulator connection-->
  <!-- <node name="websocket_bridge" pkg="rosbridge_server" type="rosbridge_websocket" output="screen" clear_params="true" required="true" /> -->  
  <rosparam command="load" file="$(env USER_HOME)/autoware.ai/autoware_files/data/yaml/nvidia_lgsvl_params.yaml" />
  <arg name="lidar_input_topic" default="/points_raw_origin"/>
  <arg name="lidar_output_topic" default="/points_raw"/>
  <arg name="image_input_topic" default="/image_raw_origin"/>

  <!-- Re-publishing simulator/camera_node/image/compressed topic to /image_raw as expected by Autoware -->
  <node name="republish" type="republish" pkg="image_transport" output="screen" args="compressed in:=/simulator/camera_node/image raw out:=/image_raw"  />

  <node pkg="rubis_pkg" type="lidar_republisher" name="lidar_republisher" output="screen">
    <param name="/input_topic" value="$(arg lidar_input_topic)" />
    <param name="/output_topic" value="$(arg lidar_output_topic)" />
  </node>

  <node pkg="rubis_pkg" type="camera_republisher" name="camera_republisher" output="screen">
    <param name="/input_topic" value="$(arg image_input_topic)" />
  </node>

  <arg name="init_x" value="-8.57" />
  <arg name="init_y" value="50.94" />
  <arg name="init_z" value="-0.75" />
  <arg name="init_roll" value="0.0" />
  <arg name="init_pitch" value="0.0" />
  <arg name="init_yaw" value="-1.8" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_velodyne" args="0.2 0.005 0.21 -0.436 0 0 base_link velodyne 10"/>
  <!-- <node pkg="tf" type="static_transform_publisher" name="gps_to_base_link" args="0 0 0 0 0 0 gps base_link 10"/> -->
  <node pkg="tf" type="static_transform_publisher" name="lidar_to_camera" args="0 0 0 0 0 0 velodyne camera 10" />

  <!-- gnss localizer -->
  <!-- <arg name="plane" default="0"/>
  <node pkg="rubis_pkg" type="gnss_localizer" name="gnss_localizer" output="screen">
    <param name="plane" value="$(arg plane)"/>
  </node> -->

</launch>

